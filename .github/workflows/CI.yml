name: CI
on: push
jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@master
        with:
          node-version: "10.x"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Tests
        run: npm run test
      - name: TSC
        run: npm run tsc
  build:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@master
        with:
          node-version: "10.x"
      - uses: actions/cache@v2
        with:
          path: |
              ~/.npm
              ~/.next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@master
        if: github.ref == 'refs/heads/master'
        with:
          name: build
          path: .next
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [test, build]
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: build
          path: .next
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: export
        run: npm run export
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@3.1.1
        with:
          ftp-server: ${{ secrets.HOST }}/${{ secrets.HOST_PATH }}
          ftp-username: ${{ secrets.FTP_USER }}
          ftp-password: ${{ secrets.PASSWORD }}
          local-dir: src/out
